<project name="OPS-SAT package" default="copyfiles" basedir=".">
  <target name="copyfiles">
    <!-- TODO - ideally most of space-common should be copied once and symlinks used -->
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/payloads-test">
      <fileset dir="${basedir}/src/main/resources/space-common"/>
      <fileset dir="${basedir}/src/main/resources/space-app-root"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.apps.PayloadsTestApp"/>
        <filter token="APID" value="1504"/>
        <filter token="NMF_LIB" value="`cd ../nmf/lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="start_payloads-test.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/nmf/nanosat-mo-supervisor-sim">
      <fileset dir="${basedir}/src/main/resources/space-common"/>
      <fileset dir="${basedir}/src/main/resources/space-supervisor-sim-root"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.provider.NanoSatMOSupervisorSoftSimImpl"/>
        <filter token="APPS_DIR" value="../.."/>
        <filter token="NMF_LIB" value="`cd ../lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="nanosat-mo-supervisor-opssat.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/all-mc-services">
      <fileset dir="${basedir}/src/main/resources/space-common"/>
      <fileset dir="${basedir}/src/main/resources/space-app-root"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.apps.AllInOne"/>
        <filter token="APID" value="1501"/>
        <filter token="NMF_LIB" value="`cd ../nmf/lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="start_all-mc-services.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/camera">
      <fileset dir="${basedir}/src/main/resources/space-common"/>
      <fileset dir="${basedir}/src/main/resources/space-app-root"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.apps.SnapNMF"/>
        <filter token="APID" value="1502"/>
        <filter token="NMF_LIB" value="`cd ../nmf/lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="start_camera.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/publish-clock">
      <fileset dir="${basedir}/src/main/resources/space-common"/>
      <fileset dir="${basedir}/src/main/resources/space-app-root"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.apps.PushClock"/>
        <filter token="APID" value="1503"/>
        <filter token="NMF_LIB" value="`cd ../nmf/lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="start_publish-clock.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <copy todir="${esa.nmf.mission.opssat.assembly.outputdir}/home/nmf/ground-mo-proxy">
      <fileset dir="${basedir}/src/main/resources/ground-mo-proxy-root"/>
      <fileset dir="${basedir}/src/main/resources/space-common" includes="mappingConfigurationParameters.xml startscript.sh"/>
      <filterset>
        <filter token="MAIN_CLASS_NAME" value="esa.mo.nmf.groundmoproxy.GroundMOProxyOPSSATImpl"/>
        <filter token="NMF_LIB" value="`cd ../lib > /dev/null; pwd`/*"/>
      </filterset>
      <firstmatchmapper>
        <globmapper from="startscript.sh" to="ground-mo-proxy.sh"/>
        <globmapper from="*" to="*"/>
      </firstmatchmapper>
    </copy>
    <chmod dir="${esa.nmf.mission.opssat.assembly.outputdir}" perm="ugo+rx" includes="**/*.sh"/>
  </target>
</project>
